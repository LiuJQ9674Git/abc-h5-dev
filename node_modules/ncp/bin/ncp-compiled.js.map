{"version":3,"sources":["ncp"],"names":[],"mappings":";;AAKA,IAAI,MAAM,QAAQ,YAAR,CAAV;IACI,OAAO,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CADX;IAEI,MAFJ;IAEY,IAFZ;;AAIA,IAAI,KAAK,MAAL,GAAc,CAAlB,EAAqB;AACnB,UAAQ,KAAR,CAAc,iFAAd;AACA,UAAQ,IAAR,CAAa,CAAb;AACD;;;AAGD,SAAS,UAAT,CAAoB,GAApB,EAAyB,MAAzB,EAAiC;AAC/B,SAAO,IAAI,MAAJ,CAAW,CAAX,EAAc,OAAO,MAArB,KAAgC,MAAvC;AACD;;AAED,IAAI,UAAU,EAAd;AACA,KAAK,OAAL,CAAa,UAAU,GAAV,EAAe;AAC1B,MAAI,WAAW,GAAX,EAAgB,UAAhB,CAAJ,EAAiC;AAC/B,YAAQ,KAAR,GAAgB,SAAS,IAAI,KAAJ,CAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,CAAT,EAA+B,EAA/B,CAAhB;AACD;AACD,MAAI,WAAW,GAAX,EAAgB,WAAhB,CAAJ,EAAkC;AAChC,YAAQ,MAAR,GAAiB,IAAI,MAAJ,CAAW,IAAI,KAAJ,CAAU,GAAV,EAAe,CAAf,EAAkB,CAAlB,CAAX,CAAjB;AACD;AACD,MAAI,WAAW,GAAX,EAAgB,aAAhB,CAAJ,EAAoC;AAClC,YAAQ,SAAR,GAAoB,IAApB;AACD;AACF,CAVD;;AAYA,IAAI,GAAJ,CAAQ,KAAK,CAAL,CAAR,EAAiB,KAAK,CAAL,CAAjB,EAA0B,OAA1B,EAAmC,UAAU,GAAV,EAAe;AAChD,MAAI,MAAM,OAAN,CAAc,GAAd,CAAJ,EAAwB;AACtB,YAAQ,KAAR,CAAc,oCAAd;AACA,QAAI,OAAJ,CAAY,UAAU,GAAV,EAAe;AACzB,cAAQ,KAAR,CAAc,IAAI,KAAJ,IAAa,IAAI,OAA/B;AACD,KAFD;AAGA,YAAQ,IAAR,CAAa,CAAb;AACD,GAND,MAOK,IAAI,GAAJ,EAAS;AACZ,YAAQ,KAAR,CAAc,wBAAd;AACA,YAAQ,KAAR,CAAc,IAAI,KAAJ,IAAa,IAAI,OAA/B;AACA,YAAQ,IAAR,CAAa,CAAb;AACD;AACF,CAbD","file":"ncp-compiled.js","sourcesContent":["#!/usr/bin/env node\n\n\n\n\nvar ncp = require('../lib/ncp'),\n    args = process.argv.slice(2),\n    source, dest;\n\nif (args.length < 2) {\n  console.error('Usage: ncp [source] [destination] [--filter=filter] [--limit=concurrency limit]');\n  process.exit(1);\n}\n\n// parse arguments the hard way\nfunction startsWith(str, prefix) {\n  return str.substr(0, prefix.length) == prefix;\n}\n\nvar options = {};\nargs.forEach(function (arg) {\n  if (startsWith(arg, \"--limit=\")) {\n    options.limit = parseInt(arg.split('=', 2)[1], 10);\n  }\n  if (startsWith(arg, \"--filter=\")) {\n    options.filter = new RegExp(arg.split('=', 2)[1]);\n  }\n  if (startsWith(arg, \"--stoponerr\")) {\n    options.stopOnErr = true;\n  }\n});\n\nncp.ncp(args[0], args[1], options, function (err) {\n  if (Array.isArray(err)) {\n    console.error('There were errors during the copy.');\n    err.forEach(function (err) {\n      console.error(err.stack || err.message);\n    });\n    process.exit(1);\n  }\n  else if (err) {\n    console.error('An error has occurred.');\n    console.error(err.stack || err.message);\n    process.exit(1);\n  }\n});\n\n\n"]}