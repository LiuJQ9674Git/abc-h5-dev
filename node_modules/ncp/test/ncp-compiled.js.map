{"version":3,"sources":["ncp.js"],"names":[],"mappings":"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","file":"ncp-compiled.js","sourcesContent":["\n\nvar assert = require('assert'),\n    fs = require('fs'),\n    path = require('path'),\n    rimraf = require('rimraf'),\n    readDirFiles = require('read-dir-files'),\n    util = require('util'),\n    ncp = require('../').ncp;\n\n\n\ndescribe('ncp', function () {\n  describe('regular files and directories', function () {\n    var fixtures = path.join(__dirname, 'regular-fixtures'),\n        src = path.join(fixtures, 'src'),\n        out = path.join(fixtures, 'out');\n\n    before(function (cb) {\n      rimraf(out, function() {\n        ncp(src, out, cb);\n      });\n    });\n\n    describe('when copying a directory of files', function () {\n      it('files are copied correctly', function (cb) {\n        readDirFiles(src, 'utf8', function (srcErr, srcFiles) {\n          readDirFiles(out, 'utf8', function (outErr, outFiles) {\n            assert.ifError(srcErr);\n            assert.deepEqual(srcFiles, outFiles);\n            cb();\n          });\n        });\n      });\n    });\n\n    describe('when copying files using filter', function () {\n      before(function (cb) {\n        var filter = function(name) {\n          return name.substr(name.length - 1) != 'a';\n        };\n        rimraf(out, function () {\n          ncp(src, out, {filter: filter}, cb);\n        });\n      });\n\n      it('files are copied correctly', function (cb) {\n        readDirFiles(src, 'utf8', function (srcErr, srcFiles) {\n          function filter(files) {\n            for (var fileName in files) {\n              var curFile = files[fileName];\n              if (curFile instanceof Object)\n                return filter(curFile);\n              if (fileName.substr(fileName.length - 1) == 'a')\n                delete files[fileName];\n            }\n          }\n          filter(srcFiles);\n          readDirFiles(out, 'utf8', function (outErr, outFiles) {\n            assert.ifError(outErr);\n            assert.deepEqual(srcFiles, outFiles);\n            cb();\n          });\n        });\n      });\n    });\n\n    describe('when using clobber=false', function () {\n      it('the copy is completed successfully', function (cb) {\n        ncp(src, out, function() {\n          ncp(src, out, {clobber: false}, function(err) {\n            assert.ifError(err);\n            cb();\n          });\n        });\n      });\n    });\n\n    describe('when using transform', function () {\n      it('file descriptors are passed correctly', function (cb) {\n        ncp(src, out, {\n           transform: function(read,write,file) {\n              assert.notEqual(file.name, undefined);\n              assert.strictEqual(typeof file.mode,'number');\n              read.pipe(write);\n           }\n        }, cb);\n      });\n    });\n\n    describe('when using rename', function() {\n      it('output files are correctly redirected', function(cb) {\n        ncp(src, out, {\n          rename: function(target) {\n            if(path.basename(target) == 'a') return path.resolve(path.dirname(target), 'z');\n            return target;\n          }\n        }, function(err) {\n          if(err) return cb(err);\n\n          readDirFiles(src, 'utf8', function (srcErr, srcFiles) {\n            readDirFiles(out, 'utf8', function (outErr, outFiles) {\n              assert.ifError(srcErr);\n              assert.deepEqual(srcFiles.a, outFiles.z);\n              cb();\n            });\n          });\n        });\n      });\n    });\n  });\n\n  describe('symlink handling', function () {\n    var fixtures = path.join(__dirname, 'symlink-fixtures'),\n        src = path.join(fixtures, 'src'),\n        out = path.join(fixtures, 'out');\n\n    beforeEach(function (cb) {\n      rimraf(out, cb);\n    });\n\n    it('copies symlinks by default', function (cb) {\n      ncp(src, out, function (err) {\n        if (err) return cb(err);\n        assert.equal(fs.readlinkSync(path.join(out, 'file-symlink')), 'foo');\n        assert.equal(fs.readlinkSync(path.join(out, 'dir-symlink')), 'dir');\n        cb();\n      })\n    });\n\n    it('copies file contents when dereference=true', function (cb) {\n      ncp(src, out, { dereference: true }, function (err) {\n        var fileSymlinkPath = path.join(out, 'file-symlink');\n        assert.ok(fs.lstatSync(fileSymlinkPath).isFile());\n        assert.equal(fs.readFileSync(fileSymlinkPath), 'foo contents');\n\n        var dirSymlinkPath = path.join(out, 'dir-symlink');\n        assert.ok(fs.lstatSync(dirSymlinkPath).isDirectory());\n        assert.deepEqual(fs.readdirSync(dirSymlinkPath), ['bar']);\n\n        cb();\n      });\n    });\n  });\n\n  describe('broken symlink handling', function () {\n    var fixtures = path.join(__dirname, 'broken-symlink-fixtures'),\n        src = path.join(fixtures, 'src'),\n        out = path.join(fixtures, 'out');\n\n    beforeEach(function (cb) {\n      rimraf(out, cb);\n    });\n\n    it('copies broken symlinks by default', function (cb) {\n      ncp(src, out, function (err) {\n        if (err) return cb(err);\n        assert.equal(fs.readlinkSync(path.join(out, 'broken-symlink')), 'does-not-exist');\n        cb();\n      })\n    });\n\n    it('returns an error when dereference=true', function (cb) {\n      ncp(src, out, {dereference: true}, function (err) {\n        assert.equal(err.length, 1);\n        assert.equal(err[0].code, 'ENOENT');\n        cb();\n      });\n    });\n  });\n\n  describe('modified files copies', function () {\n      var fixtures = path.join(__dirname, 'modified-files'),\n          src = path.join(fixtures, 'src'),\n          out = path.join(fixtures, 'out');\n\n      it('if file not exists copy file to target', function(cb) {\n          rimraf(out, function() {\n              ncp(src, out, {modified: true, clobber: false}, function (err) {\n                  assert.equal(fs.existsSync(out), true);\n                  cb();\n              });\n          });\n      });\n\n      it('change source file mtime and copy', function(cb) {\n          fs.utimesSync(src+\"/a\", new Date().getTime()/1000, new Date('2015-01-01 00:00:00').getTime()/1000);\n          ncp(src, out, {modified: true, clobber: false}, function (err) {\n              fs.stat(out+\"/a\", function(err, stats) {\n                  assert.equal(stats.mtime.getTime(), new Date('2015-01-01 00:00:00').getTime());\n                  cb();\n              });\n          });\n      });\n\n  });\n});"]}