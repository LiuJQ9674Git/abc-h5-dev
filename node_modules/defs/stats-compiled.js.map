{"version":3,"sources":["stats.js"],"names":[],"mappings":"AAAA,MAAM,MAAM,QAAQ,YAAR,CAAZ;AACA,MAAM,KAAK,QAAQ,WAAR,CAAX;AACA,MAAM,SAAS,QAAQ,QAAR,CAAf;;AAEA,SAAS,KAAT,GAAiB;AACb,SAAK,IAAL,GAAY,CAAZ;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,OAAL,GAAe,EAAf;AACH;;AAED,MAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAS,IAAT,EAAe;AACxC,WAAO,GAAG,MAAH,CAAU,IAAV,EAAgB,CAAC,OAAD,EAAU,KAAV,CAAhB,CAAP;AACA,QAAI,SAAS,OAAb,EAAsB;AAClB,aAAK,MAAL;AACH,KAFD,MAEO;AACH,aAAK,IAAL;AACH;AACJ,CAPD;;AASA,MAAM,SAAN,CAAgB,MAAhB,GAAyB,UAAS,OAAT,EAAkB,OAAlB,EAA2B,IAA3B,EAAiC;AACtD,SAAK,OAAL,CAAa,IAAb,CAAkB;AACd,iBAAS,OADK;AAEd,iBAAS,OAFK;AAGd,cAAM;AAHQ,KAAlB;AAKH,CAND;;AAQA,MAAM,SAAN,CAAgB,QAAhB,GAA2B,YAAW;;;AAGlC,UAAM,UAAU,KAAK,OAAL,CAAa,GAAb,CAAiB,UAAS,CAAT,EAAY;AACzC,eAAO,CAAP;AACH,KAFe,EAEb,IAFa,CAER,UAAS,CAAT,EAAY,CAAZ,EAAe;AACf,eAAO,EAAE,IAAF,GAAS,EAAE,IAAlB;AACH,KAJW,CAAhB,C;;AAMA,UAAM,YAAY,QAAQ,GAAR,CAAY,UAAS,MAAT,EAAiB;AAC3C,eAAO,IAAI,wBAAJ,EAA8B,OAAO,IAArC,EAA2C,OAAO,OAAlD,EAA2D,OAAO,OAAlE,CAAP;AACH,KAFiB,EAEf,IAFe,CAEV,EAFU,CAAlB;;AAIA,UAAM,MAAM,KAAK,MAAL,GAAc,KAAK,IAA/B;AACA,UAAM,YAAa,QAAQ,CAAR,GACf,mDADe,GAEf,IAAI,4CAAJ,EACI,KAAK,KAAL,CAAW,MAAM,KAAK,MAAX,GAAoB,GAA/B,CADJ,EACyC,KAAK,MAD9C,EACsD,KAAK,IAD3D,CAFJ;;AAKA,WAAO,YAAY,SAAZ,GAAwB,IAA/B;AACH,CApBD;;AAsBA,OAAO,OAAP,GAAiB,KAAjB","file":"stats-compiled.js","sourcesContent":["const fmt = require(\"simple-fmt\");\nconst is = require(\"simple-is\");\nconst assert = require(\"assert\");\n\nfunction Stats() {\n    this.lets = 0;\n    this.consts = 0;\n    this.renames = [];\n}\n\nStats.prototype.declarator = function(kind) {\n    assert(is.someof(kind, [\"const\", \"let\"]));\n    if (kind === \"const\") {\n        this.consts++;\n    } else {\n        this.lets++;\n    }\n};\n\nStats.prototype.rename = function(oldName, newName, line) {\n    this.renames.push({\n        oldName: oldName,\n        newName: newName,\n        line: line,\n    });\n};\n\nStats.prototype.toString = function() {\n//    console.log(\"defs.js stats for file {0}:\", filename)\n\n    const renames = this.renames.map(function(r) {\n        return r;\n    }).sort(function(a, b) {\n            return a.line - b.line;\n        }); // sort a copy of renames\n\n    const renameStr = renames.map(function(rename) {\n        return fmt(\"\\nline {0}: {1} => {2}\", rename.line, rename.oldName, rename.newName);\n    }).join(\"\");\n\n    const sum = this.consts + this.lets;\n    const constlets = (sum === 0 ?\n        \"can't calculate const coverage (0 consts, 0 lets)\" :\n        fmt(\"{0}% const coverage ({1} consts, {2} lets)\",\n            Math.floor(100 * this.consts / sum), this.consts, this.lets));\n\n    return constlets + renameStr + \"\\n\";\n};\n\nmodule.exports = Stats;\n"]}