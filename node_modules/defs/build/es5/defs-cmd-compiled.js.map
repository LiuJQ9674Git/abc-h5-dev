{"version":3,"sources":["defs-cmd.js"],"names":[],"mappings":"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","file":"defs-cmd-compiled.js","sourcesContent":["\"use strict\";\n\nvar fs = require(\"fs\");\nvar fmt = require(\"simple-fmt\");\nvar tryor = require(\"tryor\");\nvar defs = require(\"./defs-main\");\nvar version = \"1.1.1\";\nvar yargs = require(\"yargs\")\n    .options(\"config\", {});\nvar argv = yargs.argv;\n\nif (!argv._.length) {\n    var usage = [\n        \"defs v\" + version + \"\",\n        \"\",\n        \"Usage: defs OPTIONS <file>\",\n        \"\",\n        \"Options: \",\n        \"  --config  use specified defs-config.js instead of searching for it\",\n    ].join(\"\\n\");\n    console.error(usage);\n    process.exit(-1);\n}\nvar filename = argv._[0];\n\nif (!fs.existsSync(filename)) {\n    console.error(\"error: file not found <%s>\", filename);\n    process.exit(-1);\n}\n\nvar src = String(fs.readFileSync(filename));\n\nvar config = findAndReadConfig();\n\nvar ret = defs(src, config);\nif (ret.errors) {\n    process.stderr.write(ret.errors.join(\"\\n\"));\n    process.stderr.write(\"\\n\");\n    process.exit(-1);\n}\n\nif (config.stats) {\n    process.stdout.write(ret.stats.toString());\n    process.exit(0);\n}\nif (ret.ast) {\n    process.stdout.write(JSON.stringify(ret.ast, null, 4));\n}\nif (ret.src) {\n    process.stdout.write(ret.src);\n}\n\nfunction findAndReadConfig() {\n    if (argv.config) {\n        var config = tryor(function() { return String(fs.readFileSync(argv.config)) }, null);\n        if (!config) {\n            console.error(\"error: config file not found <%s>\", argv.config);\n            process.exit(-1);\n        }\n        var json = tryor(function() { return JSON.parse(config) }, null);\n        if (!json) {\n            console.error(\"error: config file is not valid JSON <%s>\", argv.config);\n            process.exit(-1);\n        }\n        return json;\n    }\n\n    var path = \"\";\n    var filename = \"defs-config.json\";\n    var filenamePath = null;\n\n    while (fs.existsSync(path || \".\")) {\n        filenamePath = path + filename;\n        if (fs.existsSync(filenamePath)) {\n            var config$0 = tryor(function() {\n                return JSON.parse(String(fs.readFileSync(filenamePath)));\n            }, null);\n            if (config$0 === null) {\n                console.error(\"error: config file is not valid JSON <%s>\", filenamePath);\n                process.exit(-1);\n            }\n            return config$0;\n        }\n\n        path = \"../\" + path;\n    }\n\n    return {};\n}"]}