{"version":3,"sources":["regexpu"],"names":[],"mappings":";AACC,aAAW;;AAEX,KAAI,KAAK,QAAQ,IAAR,CAAT;AACA,KAAI,QAAQ,QAAQ,OAAR,CAAZ;AACA,KAAI,UAAU,QAAQ,eAAR,CAAd;AACA,KAAI,UAAU,QAAQ,IAAR,CAAa,MAAb,CAAoB,CAApB,CAAd;AACA,KAAI,SAAS,QAAQ,KAAR,EAAb;AACA,KAAI,QAAQ,QAAQ,KAApB;AACA,KAAI,SAAS,KAAb;AACA,KAAI,IAAJ;AACA,KAAI,OAAJ;AACA,KAAI,UAAU,EAAd;AACA,KAAI,MAAM,QAAQ,GAAlB;;AAEA,KAAI,OAAO,YAAW;;AAErB,MAAI,4BAA4B,IAA5B,CAAiC,MAAjC,CAAJ,EAA8C;AAC7C,OACC,uCADD,EAEC,QAAQ,OAFT;AAIA,OAAI,CACH,YADG,EAEH,uCAFG,EAGH,oCAHG,EAIH,4BAJG,EAKH,yBALG,EAMH,eANG,EAOH,sCAPG,EAQH,sCARG,EASH,6CATG,EAUF,IAVE,CAUG,IAVH,CAAJ;AAWA,UAAO,QAAQ,IAAR,CAAa,CAAb,CAAP;AACA;;AAED,MAAI,qBAAqB,IAArB,CAA0B,MAA1B,CAAJ,EAAuC;AACtC,OAAI,KAAJ,EAAW,QAAQ,OAAnB;AACA,UAAO,QAAQ,IAAR,CAAa,CAAb,CAAP;AACA;;AAED,MAAI,kBAAkB,IAAlB,CAAuB,MAAvB,CAAJ,EAAoC;AACnC,YAAS,IAAT;AACA,GAFD,MAEO,IAAI,CAAC,kBAAkB,IAAlB,CAAuB,MAAvB,CAAL,EAAqC;AAC3C,OAAI,2BAAJ,EAAiC,MAAjC;AACA,OAAI,4CAAJ;AACA,UAAO,QAAQ,IAAR,CAAa,CAAb,CAAP;AACA;;AAED,MAAI,CAAC,QAAQ,MAAb,EAAqB;AACpB,OAAI,0CAAJ,EAAgD,MAAhD;AACA,OAAI,4CAAJ;AACA,UAAO,QAAQ,IAAR,CAAa,CAAb,CAAP;AACA;;AAED,UAAQ,OAAR,CAAgB,UAAS,OAAT,EAAkB;AACjC,OAAI,MAAJ;AACA,OAAI,MAAJ,EAAY;AACX,QAAI;AACH,eAAU,GAAG,YAAH,CAAgB,OAAhB,EAAyB,MAAzB,CAAV;AACA,KAFD,CAEE,OAAO,SAAP,EAAkB;AACnB,SAAI,6BAAJ,EAAmC,OAAnC;AACA,YAAO,QAAQ,IAAR,CAAa,CAAb,CAAP;AACA;AACD;AACD,OAAI;AACH,aAAS,QAAQ,aAAR,CAAsB,OAAtB,CAAT;AACA,QAAI,MAAJ;AACA,IAHD,CAGE,OAAO,SAAP,EAAkB;AACnB,QAAI,UAAU,OAAV,GAAoB,IAAxB;AACA,QAAI,qEAAJ;AACA,QAAI,0DAAJ;AACA,QAAI,qDAAJ;AACA,QAAI,mCAAJ,EAAyC,QAAQ,OAAjD;AACA,QAAI,UAAU,KAAd;AACA,WAAO,QAAQ,IAAR,CAAa,CAAb,CAAP;AACA;AACD,GAtBD;;;AAyBA,SAAO,QAAQ,IAAR,CAAa,CAAb,CAAP;AACA,EAlED;;AAoEA,KAAI,MAAM,KAAV,EAAiB;;AAEhB;AACA,EAHD,MAGO;;;AAGN,MAAI,CAAC,QAAQ,MAAR,CAAe,KAApB,EAA2B;;;;AAI1B,aAAU,WAAW,YAAW;;;AAG/B;AACA,IAJS,EAIP,KAJO,CAAV;AAKA;AACD,SAAO,EAAP;AACA,QAAM,EAAN,CAAS,MAAT,EAAiB,UAAS,KAAT,EAAgB;AAChC,gBAAa,OAAb;AACA,WAAQ,KAAR;AACA,GAHD;AAIA,QAAM,EAAN,CAAS,KAAT,EAAgB,YAAW;AAC1B,WAAQ,IAAR,CAAa,KAAK,IAAL,EAAb;AACA;AACA,GAHD;AAIA,QAAM,MAAN;AACA;AAED,CA9GA,GAAD","file":"regexpu-compiled.js","sourcesContent":["#!/usr/bin/env node\n(function() {\n\n\tvar fs = require('fs');\n\tvar jsesc = require('jsesc');\n\tvar regexpu = require('../regexpu.js');\n\tvar strings = process.argv.splice(2);\n\tvar option = strings.shift();\n\tvar stdin = process.stdin;\n\tvar isFile = false;\n\tvar data;\n\tvar timeout;\n\tvar options = {};\n\tvar log = console.log;\n\n\tvar main = function() {\n\n\t\tif (/^(?:-h|--help|undefined)$/.test(option)) {\n\t\t\tlog(\n\t\t\t\t'regexpu v%s - https://mths.be/regexpu',\n\t\t\t\tregexpu.version\n\t\t\t);\n\t\t\tlog([\n\t\t\t\t'\\nUsage:\\n',\n\t\t\t\t'\\tregexpu [-c | --code] [snippet ...]',\n\t\t\t\t'\\tregexpu [-f | --file] [file ...]',\n\t\t\t\t'\\tregexpu [-v | --version]',\n\t\t\t\t'\\tregexpu [-h | --help]',\n\t\t\t\t'\\nExamples:\\n',\n\t\t\t\t'\\tregexpu -f foo-es6.js > foo-es5.js',\n\t\t\t\t'\\tregexpu -c \\'var x = /foo.bar/u;\\'',\n\t\t\t\t'\\techo \\'var x = /foo.bar/u;\\' | regexpu -c'\n\t\t\t].join('\\n'));\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\tif (/^(?:-v|--version)$/.test(option)) {\n\t\t\tlog('v%s', regexpu.version);\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\tif (/^(?:-f|--file)$/.test(option)) {\n\t\t\tisFile = true;\n\t\t} else if (!/^(?:-c|--code)$/.test(option)) {\n\t\t\tlog('Unrecognized option `%s`.', option);\n\t\t\tlog('Try `regexpu --help` for more information.');\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\tif (!strings.length) {\n\t\t\tlog('Error: option `%s` requires an argument.', option);\n\t\t\tlog('Try `regexpu --help` for more information.');\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\tstrings.forEach(function(snippet) {\n\t\t\tvar result;\n\t\t\tif (isFile) {\n\t\t\t\ttry {\n\t\t\t\t\tsnippet = fs.readFileSync(snippet, 'utf8');\n\t\t\t\t} catch (exception) {\n\t\t\t\t\tlog('Error: no such file. (`%s`)', snippet);\n\t\t\t\t\treturn process.exit(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tresult = regexpu.transpileCode(snippet);\n\t\t\t\tlog(result);\n\t\t\t} catch (exception) {\n\t\t\t\tlog(exception.message + '\\n');\n\t\t\t\tlog('Error: failed to transpile. Make sure the JavaScript code is valid.');\n\t\t\t\tlog('If you think this is a bug in regexpu, please report it:');\n\t\t\t\tlog('https://github.com/mathiasbynens/regexpu/issues/new');\n\t\t\t\tlog('\\nStack trace using regexpu@%s:\\n', regexpu.version);\n\t\t\t\tlog(exception.stack);\n\t\t\t\treturn process.exit(1);\n\t\t\t}\n\t\t});\n\t\t// Return with exit status 0 outside of the `forEach` loop, in case\n\t\t// multiple snippets or files were passed in.\n\t\treturn process.exit(0);\n\t};\n\n\tif (stdin.isTTY) {\n\t\t// handle shell arguments\n\t\tmain();\n\t} else {\n\t\t// Either the script is called from within a non-TTY context, or `stdin`\n\t\t// content is being piped in.\n\t\tif (!process.stdout.isTTY) {\n\t\t\t// The script was called from a non-TTY context. This is a rather uncommon\n\t\t\t// use case we don’t actively support. However, we don’t want the script\n\t\t\t// to wait forever in such cases, so…\n\t\t\ttimeout = setTimeout(function() {\n\t\t\t\t// …if no piped data arrived after a whole minute, handle shell\n\t\t\t\t// arguments instead.\n\t\t\t\tmain();\n\t\t\t}, 60000);\n\t\t}\n\t\tdata = '';\n\t\tstdin.on('data', function(chunk) {\n\t\t\tclearTimeout(timeout);\n\t\t\tdata += chunk;\n\t\t});\n\t\tstdin.on('end', function() {\n\t\t\tstrings.push(data.trim());\n\t\t\tmain();\n\t\t});\n\t\tstdin.resume();\n\t}\n\n}());\n"]}