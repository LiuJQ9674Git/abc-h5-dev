{"version":3,"sources":["end.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,aAAa,QAAQ,cAAR,CAAjB;IACI,QAAQ,QAAQ,UAAR,CADZ;;AAGA,OAAO,OAAP,GAAiB,SAAS,KAAT,CAAe,IAAf,EAAqB,OAArB,EAA8B,QAA9B,EAAwC;AACvD,MAAI,YAAY;AACd,YAAQ,IADM;AAEd,mBAAe;AAFD,GAAhB;MAII,MAJJ;;AAMA,MAAI,CAAC,WAAW,GAAhB,EAAqB,WAAW,CAAX,CAArB,KAAuC,IAAI,YAAY,IAAhB,EAAsB,WAAW,cAAc,IAAd,KAAuB,CAAlC;;AAE7D,MAAI,WAAW,GAAf,EAAoB;AAClB,SAAK,gBAAL,CAAsB,WAAW,GAAjC,EAAsC,IAAtC,EAA4C,KAA5C;;AAEA,aAAS,WAAW,YAAY;AAC9B,aAAO,KAAK,SAAL,CAAP;AACD,KAFQ,EAEN,CAAC,YAAY,GAAb,IAAoB,GAFd,CAAT;AAGD,GAND,MAMO,WAAW,KAAK,IAAL,CAAU,IAAV,EAAgB,SAAhB,CAAX,EAAuC,CAAvC;;AAEP,WAAS,IAAT,CAAc,KAAd,EAAqB;AACnB,QAAI,MAAM,MAAN,KAAiB,MAAM,aAA3B,EAA0C;AAC1C,iBAAa,MAAb;AACA,UAAM,MAAN,CAAa,mBAAb,CAAiC,WAAW,GAA5C,EAAiD,IAAjD;AACA,YAAQ,IAAR,CAAa,IAAb;AACD;AACF,CAvBD;;AAyBA,OAAO,OAAP,CAAe,cAAf,GAAgC,aAAhC;;AAEA,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,MAAI,MAAM,MAAM,IAAN,EAAY,WAAW,QAAvB,CAAV;MACI,OAAO,IAAI,OAAJ,CAAY,IAAZ,MAAsB,CAAC,CAAvB,GAA2B,IAA3B,GAAkC,CAD7C;;AAGA,SAAO,WAAW,GAAX,IAAkB,IAAzB;AACD","file":"end-compiled.js","sourcesContent":["'use strict';\n\nvar transition = require('./properties'),\n    style = require('../style');\n\nmodule.exports = function onEnd(node, handler, duration) {\n  var fakeEvent = {\n    target: node,\n    currentTarget: node\n  },\n      backup;\n\n  if (!transition.end) duration = 0;else if (duration == null) duration = parseDuration(node) || 0;\n\n  if (transition.end) {\n    node.addEventListener(transition.end, done, false);\n\n    backup = setTimeout(function () {\n      return done(fakeEvent);\n    }, (duration || 100) * 1.5);\n  } else setTimeout(done.bind(null, fakeEvent), 0);\n\n  function done(event) {\n    if (event.target !== event.currentTarget) return;\n    clearTimeout(backup);\n    event.target.removeEventListener(transition.end, done);\n    handler.call(this);\n  }\n};\n\nmodule.exports._parseDuration = parseDuration;\n\nfunction parseDuration(node) {\n  var str = style(node, transition.duration),\n      mult = str.indexOf('ms') === -1 ? 1000 : 1;\n\n  return parseFloat(str) * mult;\n}"]}