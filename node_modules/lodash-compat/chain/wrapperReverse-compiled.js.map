{"version":3,"sources":["wrapperReverse.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,yBAAR,CAAlB;IACI,gBAAgB,QAAQ,2BAAR,CADpB;IAEI,OAAO,QAAQ,QAAR,CAFX;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAS,cAAT,GAA0B;AACxB,MAAI,QAAQ,KAAK,WAAjB;;AAEA,MAAI,cAAc,UAAS,KAAT,EAAgB;AAChC,WAAO,MAAM,OAAN,EAAP;AACD,GAFD;AAGA,MAAI,iBAAiB,WAArB,EAAkC;AAChC,QAAI,UAAU,KAAd;AACA,QAAI,KAAK,WAAL,CAAiB,MAArB,EAA6B;AAC3B,gBAAU,IAAI,WAAJ,CAAgB,IAAhB,CAAV;AACD;AACD,cAAU,QAAQ,OAAR,EAAV;AACA,YAAQ,WAAR,CAAoB,IAApB,CAAyB,EAAE,QAAQ,IAAV,EAAgB,QAAQ,CAAC,WAAD,CAAxB,EAAuC,WAAW,SAAlD,EAAzB;AACA,WAAO,IAAI,aAAJ,CAAkB,OAAlB,EAA2B,KAAK,SAAhC,CAAP;AACD;AACD,SAAO,KAAK,IAAL,CAAU,WAAV,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"wrapperReverse-compiled.js","sourcesContent":["var LazyWrapper = require('../internal/LazyWrapper'),\n    LodashWrapper = require('../internal/LodashWrapper'),\n    thru = require('./thru');\n\n/**\n * Reverses the wrapped array so the first element becomes the last, the\n * second element becomes the second to last, and so on.\n *\n * **Note:** This method mutates the wrapped array.\n *\n * @name reverse\n * @memberOf _\n * @category Chain\n * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _(array).reverse().value()\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction wrapperReverse() {\n  var value = this.__wrapped__;\n\n  var interceptor = function(value) {\n    return value.reverse();\n  };\n  if (value instanceof LazyWrapper) {\n    var wrapped = value;\n    if (this.__actions__.length) {\n      wrapped = new LazyWrapper(this);\n    }\n    wrapped = wrapped.reverse();\n    wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n    return new LodashWrapper(wrapped, this.__chain__);\n  }\n  return this.thru(interceptor);\n}\n\nmodule.exports = wrapperReverse;\n"]}