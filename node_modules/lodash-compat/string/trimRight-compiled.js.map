{"version":3,"sources":["trimRight.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,0BAAR,CAAnB;IACI,kBAAkB,QAAQ,6BAAR,CADtB;IAEI,iBAAiB,QAAQ,4BAAR,CAFrB;IAGI,oBAAoB,QAAQ,+BAAR,CAHxB;;;;;;;;;;;;;;;;;;;;AAuBA,SAAS,SAAT,CAAmB,MAAnB,EAA2B,KAA3B,EAAkC,KAAlC,EAAyC;AACvC,MAAI,QAAQ,MAAZ;AACA,WAAS,aAAa,MAAb,CAAT;AACA,MAAI,CAAC,MAAL,EAAa;AACX,WAAO,MAAP;AACD;AACD,MAAI,QAAQ,eAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,CAAR,GAA8C,SAAS,IAA3D,EAAiE;AAC/D,WAAO,OAAO,KAAP,CAAa,CAAb,EAAgB,kBAAkB,MAAlB,IAA4B,CAA5C,CAAP;AACD;AACD,SAAO,OAAO,KAAP,CAAa,CAAb,EAAgB,gBAAgB,MAAhB,EAAyB,QAAQ,EAAjC,IAAwC,CAAxD,CAAP;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"trimRight-compiled.js","sourcesContent":["var baseToString = require('../internal/baseToString'),\n    charsRightIndex = require('../internal/charsRightIndex'),\n    isIterateeCall = require('../internal/isIterateeCall'),\n    trimmedRightIndex = require('../internal/trimmedRightIndex');\n\n/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimRight('  abc  ');\n * // => '  abc'\n *\n * _.trimRight('-_-abc-_-', '_-');\n * // => '-_-abc'\n */\nfunction trimRight(string, chars, guard) {\n  var value = string;\n  string = baseToString(string);\n  if (!string) {\n    return string;\n  }\n  if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n    return string.slice(0, trimmedRightIndex(string) + 1);\n  }\n  return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n}\n\nmodule.exports = trimRight;\n"]}