{"version":3,"sources":["createPartial.js"],"names":[],"mappings":"AAAA,IAAI,gBAAgB,QAAQ,iBAAR,CAApB;IACI,iBAAiB,QAAQ,kBAAR,CADrB;IAEI,YAAY,QAAQ,uBAAR,CAFhB;;;;;;;;;AAWA,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,MAAI,cAAc,UAAU,UAAS,IAAT,EAAe,QAAf,EAAyB;AACnD,QAAI,UAAU,eAAe,QAAf,EAAyB,YAAY,WAArC,CAAd;AACA,WAAO,cAAc,IAAd,EAAoB,IAApB,EAA0B,SAA1B,EAAqC,QAArC,EAA+C,OAA/C,CAAP;AACD,GAHiB,CAAlB;AAIA,SAAO,WAAP;AACD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"createPartial-compiled.js","sourcesContent":["var createWrapper = require('./createWrapper'),\n    replaceHolders = require('./replaceHolders'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates a `_.partial` or `_.partialRight` function.\n *\n * @private\n * @param {boolean} flag The partial bit flag.\n * @returns {Function} Returns the new partial function.\n */\nfunction createPartial(flag) {\n  var partialFunc = restParam(function(func, partials) {\n    var holders = replaceHolders(partials, partialFunc.placeholder);\n    return createWrapper(func, flag, undefined, partials, holders);\n  });\n  return partialFunc;\n}\n\nmodule.exports = createPartial;\n"]}