{"version":3,"sources":["arrayExtremum.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,SAAS,aAAT,CAAuB,KAAvB,EAA8B,QAA9B,EAAwC,UAAxC,EAAoD,OAApD,EAA6D;AAC3D,MAAI,QAAQ,CAAC,CAAb;MACI,SAAS,MAAM,MADnB;MAEI,WAAW,OAFf;MAGI,SAAS,QAHb;;AAKA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,QAAI,QAAQ,MAAM,KAAN,CAAZ;QACI,UAAU,CAAC,SAAS,KAAT,CADf;;AAGA,QAAI,WAAW,OAAX,EAAoB,QAApB,CAAJ,EAAmC;AACjC,iBAAW,OAAX;AACA,eAAS,KAAT;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"arrayExtremum-compiled.js","sourcesContent":["/**\n * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n * with one argument: (value).\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} comparator The function used to compare values.\n * @param {*} exValue The initial extremum value.\n * @returns {*} Returns the extremum value.\n */\nfunction arrayExtremum(array, iteratee, comparator, exValue) {\n  var index = -1,\n      length = array.length,\n      computed = exValue,\n      result = computed;\n\n  while (++index < length) {\n    var value = array[index],\n        current = +iteratee(value);\n\n    if (comparator(current, computed)) {\n      computed = current;\n      result = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayExtremum;\n"]}