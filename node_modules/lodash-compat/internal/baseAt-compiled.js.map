{"version":3,"sources":["baseAt.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,eAAR,CAAlB;IACI,UAAU,QAAQ,WAAR,CADd;;;;;;;;;;;AAYA,SAAS,MAAT,CAAgB,UAAhB,EAA4B,KAA5B,EAAmC;AACjC,MAAI,QAAQ,CAAC,CAAb;MACI,QAAQ,cAAc,IAD1B;MAEI,QAAQ,CAAC,KAAD,IAAU,YAAY,UAAZ,CAFtB;MAGI,SAAS,QAAQ,WAAW,MAAnB,GAA4B,CAHzC;MAII,cAAc,MAAM,MAJxB;MAKI,SAAS,MAAM,WAAN,CALb;;AAOA,SAAM,EAAE,KAAF,GAAU,WAAhB,EAA6B;AAC3B,QAAI,MAAM,MAAM,KAAN,CAAV;AACA,QAAI,KAAJ,EAAW;AACT,aAAO,KAAP,IAAgB,QAAQ,GAAR,EAAa,MAAb,IAAuB,WAAW,GAAX,CAAvB,GAAyC,SAAzD;AACD,KAFD,MAEO;AACL,aAAO,KAAP,IAAgB,QAAQ,SAAR,GAAoB,WAAW,GAAX,CAApC;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"baseAt-compiled.js","sourcesContent":["var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex');\n\n/**\n * The base implementation of `_.at` without support for string collections\n * and individual key arguments.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {number[]|string[]} props The property names or indexes of elements to pick.\n * @returns {Array} Returns the new array of picked elements.\n */\nfunction baseAt(collection, props) {\n  var index = -1,\n      isNil = collection == null,\n      isArr = !isNil && isArrayLike(collection),\n      length = isArr ? collection.length : 0,\n      propsLength = props.length,\n      result = Array(propsLength);\n\n  while(++index < propsLength) {\n    var key = props[index];\n    if (isArr) {\n      result[index] = isIndex(key, length) ? collection[key] : undefined;\n    } else {\n      result[index] = isNil ? undefined : collection[key];\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseAt;\n"]}