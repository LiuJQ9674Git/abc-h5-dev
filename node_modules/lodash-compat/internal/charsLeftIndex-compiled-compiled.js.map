{"version":3,"sources":["charsLeftIndex-compiled.js"],"names":[],"mappings":";;;;;;;;;AASA,SAAS,cAAT,CAAwB,MAAxB,EAAgC,KAAhC,EAAuC;AACrC,MAAI,QAAQ,CAAC,CAAb;MACI,SAAS,OAAO,MADpB;;AAGA,SAAO,EAAE,KAAF,GAAU,MAAV,IAAoB,MAAM,OAAN,CAAc,OAAO,MAAP,CAAc,KAAd,CAAd,IAAsC,CAAC,CAAlE,EAAqE,CAAE;AACvE,SAAO,KAAP;AACD;;AAED,OAAO,OAAP,GAAiB,cAAjB","file":"charsLeftIndex-compiled-compiled.js","sourcesContent":["/**\n * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n * of `string` that is not found in `chars`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @param {string} chars The characters to find.\n * @returns {number} Returns the index of the first character not found in `chars`.\n */\nfunction charsLeftIndex(string, chars) {\n  var index = -1,\n      length = string.length;\n\n  while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n  return index;\n}\n\nmodule.exports = charsLeftIndex;\n\n//# sourceMappingURL=charsLeftIndex-compiled.js.map"]}