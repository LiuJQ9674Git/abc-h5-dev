{"version":3,"sources":["LodashWrapper.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,cAAR,CAAjB;IACI,aAAa,QAAQ,cAAR,CADjB;;;;;;;;;;AAWA,SAAS,aAAT,CAAuB,KAAvB,EAA8B,QAA9B,EAAwC,OAAxC,EAAiD;AAC/C,OAAK,WAAL,GAAmB,KAAnB;AACA,OAAK,WAAL,GAAmB,WAAW,EAA9B;AACA,OAAK,SAAL,GAAiB,CAAC,CAAC,QAAnB;AACD;;AAED,cAAc,SAAd,GAA0B,WAAW,WAAW,SAAtB,CAA1B;AACA,cAAc,SAAd,CAAwB,WAAxB,GAAsC,aAAtC;;AAEA,OAAO,OAAP,GAAiB,aAAjB","file":"LodashWrapper-compiled.js","sourcesContent":["var baseCreate = require('./baseCreate'),\n    baseLodash = require('./baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n */\nfunction LodashWrapper(value, chainAll, actions) {\n  this.__wrapped__ = value;\n  this.__actions__ = actions || [];\n  this.__chain__ = !!chainAll;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n"]}