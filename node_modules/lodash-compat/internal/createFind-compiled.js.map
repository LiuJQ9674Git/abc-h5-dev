{"version":3,"sources":["createFind.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,gBAAR,CAAnB;IACI,WAAW,QAAQ,YAAR,CADf;IAEI,gBAAgB,QAAQ,iBAAR,CAFpB;IAGI,UAAU,QAAQ,iBAAR,CAHd;;;;;;;;;;AAaA,SAAS,UAAT,CAAoB,QAApB,EAA8B,SAA9B,EAAyC;AACvC,SAAO,UAAS,UAAT,EAAqB,SAArB,EAAgC,OAAhC,EAAyC;AAC9C,gBAAY,aAAa,SAAb,EAAwB,OAAxB,EAAiC,CAAjC,CAAZ;AACA,QAAI,QAAQ,UAAR,CAAJ,EAAyB;AACvB,UAAI,QAAQ,cAAc,UAAd,EAA0B,SAA1B,EAAqC,SAArC,CAAZ;AACA,aAAO,QAAQ,CAAC,CAAT,GAAa,WAAW,KAAX,CAAb,GAAiC,SAAxC;AACD;AACD,WAAO,SAAS,UAAT,EAAqB,SAArB,EAAgC,QAAhC,CAAP;AACD,GAPD;AAQD;;AAED,OAAO,OAAP,GAAiB,UAAjB","file":"createFind-compiled.js","sourcesContent":["var baseCallback = require('./baseCallback'),\n    baseFind = require('./baseFind'),\n    baseFindIndex = require('./baseFindIndex'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n"]}