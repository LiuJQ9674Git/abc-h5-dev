{"version":3,"sources":["LazyWrapper.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,cAAR,CAAjB;IACI,aAAa,QAAQ,cAAR,CADjB;;;AAIA,IAAI,oBAAoB,OAAO,iBAA/B;;;;;;;;AAQA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AAC1B,OAAK,WAAL,GAAmB,KAAnB;AACA,OAAK,WAAL,GAAmB,EAAnB;AACA,OAAK,OAAL,GAAe,CAAf;AACA,OAAK,YAAL,GAAoB,KAApB;AACA,OAAK,aAAL,GAAqB,EAArB;AACA,OAAK,aAAL,GAAqB,iBAArB;AACA,OAAK,SAAL,GAAiB,EAAjB;AACD;;AAED,YAAY,SAAZ,GAAwB,WAAW,WAAW,SAAtB,CAAxB;AACA,YAAY,SAAZ,CAAsB,WAAtB,GAAoC,WAApC;;AAEA,OAAO,OAAP,GAAiB,WAAjB","file":"LazyWrapper-compiled.js","sourcesContent":["var baseCreate = require('./baseCreate'),\n    baseLodash = require('./baseLodash');\n\n/** Used as references for `-Infinity` and `Infinity`. */\nvar POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = POSITIVE_INFINITY;\n  this.__views__ = [];\n}\n\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n"]}