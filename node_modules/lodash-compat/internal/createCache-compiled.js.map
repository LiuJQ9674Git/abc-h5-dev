{"version":3,"sources":["createCache.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,YAAR,CAAf;IACI,YAAY,QAAQ,aAAR,CADhB;;;AAIA,IAAI,MAAM,UAAU,MAAV,EAAkB,KAAlB,CAAV;;;AAGA,IAAI,eAAe,UAAU,MAAV,EAAkB,QAAlB,CAAnB;;;;;;;;;AASA,SAAS,WAAT,CAAqB,MAArB,EAA6B;AAC3B,SAAQ,gBAAgB,GAAjB,GAAwB,IAAI,QAAJ,CAAa,MAAb,CAAxB,GAA+C,IAAtD;AACD;;AAED,OAAO,OAAP,GAAiB,WAAjB","file":"createCache-compiled.js","sourcesContent":["var SetCache = require('./SetCache'),\n    getNative = require('./getNative');\n\n/** Native method references. */\nvar Set = getNative(global, 'Set');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a `Set` cache object to optimize linear searches of large arrays.\n *\n * @private\n * @param {Array} [values] The values to cache.\n * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n */\nfunction createCache(values) {\n  return (nativeCreate && Set) ? new SetCache(values) : null;\n}\n\nmodule.exports = createCache;\n"]}