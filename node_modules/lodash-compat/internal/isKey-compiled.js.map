{"version":3,"sources":["isKey.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,iBAAR,CAAd;IACI,WAAW,QAAQ,YAAR,CADf;;;AAIA,IAAI,eAAe,oDAAnB;IACI,gBAAgB,OADpB;;;;;;;;;;AAWA,SAAS,KAAT,CAAe,KAAf,EAAsB,MAAtB,EAA8B;AAC5B,MAAI,OAAO,OAAO,KAAlB;AACA,MAAK,QAAQ,QAAR,IAAoB,cAAc,IAAd,CAAmB,KAAnB,CAArB,IAAmD,QAAQ,QAA/D,EAAyE;AACvE,WAAO,IAAP;AACD;AACD,MAAI,QAAQ,KAAR,CAAJ,EAAoB;AAClB,WAAO,KAAP;AACD;AACD,MAAI,SAAS,CAAC,aAAa,IAAb,CAAkB,KAAlB,CAAd;AACA,SAAO,UAAW,UAAU,IAAV,IAAkB,SAAS,SAAS,MAAT,CAA7C;AACD;;AAED,OAAO,OAAP,GAAiB,KAAjB","file":"isKey-compiled.js","sourcesContent":["var isArray = require('../lang/isArray'),\n    toObject = require('./toObject');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\nmodule.exports = isKey;\n"]}