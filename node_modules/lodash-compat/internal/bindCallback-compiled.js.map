{"version":3,"sources":["bindCallback.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,QAAQ,qBAAR,CAAf;;;;;;;;;;;;AAYA,SAAS,YAAT,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC,QAArC,EAA+C;AAC7C,MAAI,OAAO,IAAP,IAAe,UAAnB,EAA+B;AAC7B,WAAO,QAAP;AACD;AACD,MAAI,YAAY,SAAhB,EAA2B;AACzB,WAAO,IAAP;AACD;AACD,UAAQ,QAAR;AACE,SAAK,CAAL;AAAQ,aAAO,UAAS,KAAT,EAAgB;AAC7B,eAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,KAAnB,CAAP;AACD,OAFO;AAGR,SAAK,CAAL;AAAQ,aAAO,UAAS,KAAT,EAAgB,KAAhB,EAAuB,UAAvB,EAAmC;AAChD,eAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,UAAjC,CAAP;AACD,OAFO;AAGR,SAAK,CAAL;AAAQ,aAAO,UAAS,WAAT,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,UAApC,EAAgD;AAC7D,eAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,WAAnB,EAAgC,KAAhC,EAAuC,KAAvC,EAA8C,UAA9C,CAAP;AACD,OAFO;AAGR,SAAK,CAAL;AAAQ,aAAO,UAAS,KAAT,EAAgB,KAAhB,EAAuB,GAAvB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C;AACzD,eAAO,KAAK,IAAL,CAAU,OAAV,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,GAAjC,EAAsC,MAAtC,EAA8C,MAA9C,CAAP;AACD,OAFO;AAVV;AAcA,SAAO,YAAW;AAChB,WAAO,KAAK,KAAL,CAAW,OAAX,EAAoB,SAApB,CAAP;AACD,GAFD;AAGD;;AAED,OAAO,OAAP,GAAiB,YAAjB","file":"bindCallback-compiled.js","sourcesContent":["var identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n"]}