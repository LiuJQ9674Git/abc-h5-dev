{"version":3,"sources":["intersection.js"],"names":[],"mappings":"AAAA,IAAI,cAAc,QAAQ,yBAAR,CAAlB;IACI,eAAe,QAAQ,0BAAR,CADnB;IAEI,cAAc,QAAQ,yBAAR,CAFlB;IAGI,cAAc,QAAQ,yBAAR,CAHlB;IAII,YAAY,QAAQ,uBAAR,CAJhB;;;;;;;;;;;;;;;;AAoBA,IAAI,eAAe,UAAU,UAAS,MAAT,EAAiB;AAC5C,MAAI,YAAY,OAAO,MAAvB;MACI,WAAW,SADf;MAEI,SAAS,MAAM,MAAN,CAFb;MAGI,UAAU,WAHd;MAII,WAAW,IAJf;MAKI,SAAS,EALb;;AAOA,SAAO,UAAP,EAAmB;AACjB,QAAI,QAAQ,OAAO,QAAP,IAAmB,YAAY,QAAQ,OAAO,QAAP,CAApB,IAAwC,KAAxC,GAAgD,EAA/E;AACA,WAAO,QAAP,IAAoB,YAAY,MAAM,MAAN,IAAgB,GAA7B,GAAoC,YAAY,YAAY,KAAxB,CAApC,GAAqE,IAAxF;AACD;AACD,MAAI,QAAQ,OAAO,CAAP,CAAZ;MACI,QAAQ,CAAC,CADb;MAEI,SAAS,QAAQ,MAAM,MAAd,GAAuB,CAFpC;MAGI,OAAO,OAAO,CAAP,CAHX;;AAKA,SACA,OAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,YAAQ,MAAM,KAAN,CAAR;AACA,QAAI,CAAC,OAAO,aAAa,IAAb,EAAmB,KAAnB,CAAP,GAAmC,QAAQ,MAAR,EAAgB,KAAhB,EAAuB,CAAvB,CAApC,IAAiE,CAArE,EAAwE;AACtE,UAAI,WAAW,SAAf;AACA,aAAO,EAAE,QAAT,EAAmB;AACjB,YAAI,QAAQ,OAAO,QAAP,CAAZ;AACA,YAAI,CAAC,QAAQ,aAAa,KAAb,EAAoB,KAApB,CAAR,GAAqC,QAAQ,OAAO,QAAP,CAAR,EAA0B,KAA1B,EAAiC,CAAjC,CAAtC,IAA6E,CAAjF,EAAoF;AAClF,mBAAS,KAAT;AACD;AACF;AACD,UAAI,IAAJ,EAAU;AACR,aAAK,IAAL,CAAU,KAAV;AACD;AACD,aAAO,IAAP,CAAY,KAAZ;AACD;AACF;AACD,SAAO,MAAP;AACD,CAnCkB,CAAnB;;AAqCA,OAAO,OAAP,GAAiB,YAAjB","file":"intersection-compiled.js","sourcesContent":["var baseIndexOf = require('../internal/baseIndexOf'),\n    cacheIndexOf = require('../internal/cacheIndexOf'),\n    createCache = require('../internal/createCache'),\n    isArrayLike = require('../internal/isArrayLike'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates an array of unique values that are included in all of the provided\n * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of shared values.\n * @example\n * _.intersection([1, 2], [4, 2], [2, 1]);\n * // => [2]\n */\nvar intersection = restParam(function(arrays) {\n  var othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(length),\n      indexOf = baseIndexOf,\n      isCommon = true,\n      result = [];\n\n  while (othIndex--) {\n    var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n    caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n  }\n  var array = arrays[0],\n      index = -1,\n      length = array ? array.length : 0,\n      seen = caches[0];\n\n  outer:\n  while (++index < length) {\n    value = array[index];\n    if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n      var othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(value);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n});\n\nmodule.exports = intersection;\n"]}