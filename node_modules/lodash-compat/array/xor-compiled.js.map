{"version":3,"sources":["xor.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,uBAAR,CAAhB;IACI,iBAAiB,QAAQ,4BAAR,CADrB;IAEI,WAAW,QAAQ,sBAAR,CAFf;IAGI,cAAc,QAAQ,yBAAR,CAHlB;;;;;;;;;;;;;;;;AAmBA,SAAS,GAAT,GAAe;AACb,MAAI,QAAQ,CAAC,CAAb;MACI,SAAS,UAAU,MADvB;;AAGA,SAAO,EAAE,KAAF,GAAU,MAAjB,EAAyB;AACvB,QAAI,QAAQ,UAAU,KAAV,CAAZ;AACA,QAAI,YAAY,KAAZ,CAAJ,EAAwB;AACtB,UAAI,SAAS,SACT,UAAU,eAAe,MAAf,EAAuB,KAAvB,CAAV,EAAyC,eAAe,KAAf,EAAsB,MAAtB,CAAzC,CADS,GAET,KAFJ;AAGD;AACF;AACD,SAAO,SAAS,SAAS,MAAT,CAAT,GAA4B,EAAnC;AACD;;AAED,OAAO,OAAP,GAAiB,GAAjB","file":"xor-compiled.js","sourcesContent":["var arrayPush = require('../internal/arrayPush'),\n    baseDifference = require('../internal/baseDifference'),\n    baseUniq = require('../internal/baseUniq'),\n    isArrayLike = require('../internal/isArrayLike');\n\n/**\n * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the provided arrays.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of values.\n * @example\n *\n * _.xor([1, 2], [4, 2]);\n * // => [1, 4]\n */\nfunction xor() {\n  var index = -1,\n      length = arguments.length;\n\n  while (++index < length) {\n    var array = arguments[index];\n    if (isArrayLike(array)) {\n      var result = result\n        ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n        : array;\n    }\n  }\n  return result ? baseUniq(result) : [];\n}\n\nmodule.exports = xor;\n"]}