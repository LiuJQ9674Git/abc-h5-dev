{"version":3,"sources":["set.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,qBAAR,CAAd;IACI,QAAQ,QAAQ,mBAAR,CADZ;IAEI,WAAW,QAAQ,kBAAR,CAFf;IAGI,SAAS,QAAQ,oBAAR,CAHb;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAS,GAAT,CAAa,MAAb,EAAqB,IAArB,EAA2B,KAA3B,EAAkC;AAChC,MAAI,UAAU,IAAd,EAAoB;AAClB,WAAO,MAAP;AACD;AACD,MAAI,UAAW,OAAO,EAAtB;AACA,SAAQ,OAAO,OAAP,KAAmB,IAAnB,IAA2B,MAAM,IAAN,EAAY,MAAZ,CAA5B,GAAmD,CAAC,OAAD,CAAnD,GAA+D,OAAO,IAAP,CAAtE;;AAEA,MAAI,QAAQ,CAAC,CAAb;MACI,SAAS,KAAK,MADlB;MAEI,YAAY,SAAS,CAFzB;MAGI,SAAS,MAHb;;AAKA,SAAO,UAAU,IAAV,IAAkB,EAAE,KAAF,GAAU,MAAnC,EAA2C;AACzC,QAAI,MAAM,KAAK,KAAL,CAAV;AACA,QAAI,SAAS,MAAT,CAAJ,EAAsB;AACpB,UAAI,SAAS,SAAb,EAAwB;AACtB,eAAO,GAAP,IAAc,KAAd;AACD,OAFD,MAEO,IAAI,OAAO,GAAP,KAAe,IAAnB,EAAyB;AAC9B,eAAO,GAAP,IAAc,QAAQ,KAAK,QAAQ,CAAb,CAAR,IAA2B,EAA3B,GAAgC,EAA9C;AACD;AACF;AACD,aAAS,OAAO,GAAP,CAAT;AACD;AACD,SAAO,MAAP;AACD;;AAED,OAAO,OAAP,GAAiB,GAAjB","file":"set-compiled.js","sourcesContent":["var isIndex = require('../internal/isIndex'),\n    isKey = require('../internal/isKey'),\n    isObject = require('../lang/isObject'),\n    toPath = require('../internal/toPath');\n\n/**\n * Sets the property value of `path` on `object`. If a portion of `path`\n * does not exist it's created.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to augment.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, 'x[0].y.z', 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  if (object == null) {\n    return object;\n  }\n  var pathKey = (path + '');\n  path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = path[index];\n    if (isObject(nested)) {\n      if (index == lastIndex) {\n        nested[key] = value;\n      } else if (nested[key] == null) {\n        nested[key] = isIndex(path[index + 1]) ? [] : {};\n      }\n    }\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = set;\n"]}