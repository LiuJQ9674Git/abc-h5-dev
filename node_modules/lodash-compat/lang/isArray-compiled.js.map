{"version":3,"sources":["isArray.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,uBAAR,CAAhB;IACI,WAAW,QAAQ,sBAAR,CADf;IAEI,eAAe,QAAQ,0BAAR,CAFnB;;;AAKA,IAAI,WAAW,gBAAf;;;AAGA,IAAI,cAAc,OAAO,SAAzB;;;;;;AAMA,IAAI,cAAc,YAAY,QAA9B;;;AAGA,IAAI,gBAAgB,UAAU,KAAV,EAAiB,SAAjB,CAApB;;;;;;;;;;;;;;;;;;AAkBA,IAAI,UAAU,iBAAiB,UAAS,KAAT,EAAgB;AAC7C,SAAO,aAAa,KAAb,KAAuB,SAAS,MAAM,MAAf,CAAvB,IAAiD,YAAY,IAAZ,CAAiB,KAAjB,KAA2B,QAAnF;AACD,CAFD;;AAIA,OAAO,OAAP,GAAiB,OAAjB","file":"isArray-compiled.js","sourcesContent":["var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n"]}