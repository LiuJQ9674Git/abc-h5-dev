{"version":3,"sources":["isBoolean.js"],"names":[],"mappings":"AAAA,IAAI,eAAe,QAAQ,0BAAR,CAAnB;;;AAGA,IAAI,UAAU,kBAAd;;;AAGA,IAAI,cAAc,OAAO,SAAzB;;;;;;AAMA,IAAI,cAAc,YAAY,QAA9B;;;;;;;;;;;;;;;;;;AAkBA,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAU,IAAV,IAAkB,UAAU,KAA5B,IAAsC,aAAa,KAAb,KAAuB,YAAY,IAAZ,CAAiB,KAAjB,KAA2B,OAA/F;AACD;;AAED,OAAO,OAAP,GAAiB,SAAjB","file":"isBoolean-compiled.js","sourcesContent":["var isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n"]}