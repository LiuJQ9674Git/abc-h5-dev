{"version":3,"sources":["isNative.js"],"names":[],"mappings":"AAAA,IAAI,aAAa,QAAQ,cAAR,CAAjB;IACI,eAAe,QAAQ,0BAAR,CADnB;IAEI,eAAe,QAAQ,0BAAR,CAFnB;;;AAKA,IAAI,eAAe,6BAAnB;;;AAGA,IAAI,cAAc,OAAO,SAAzB;;;AAGA,IAAI,aAAa,SAAS,SAAT,CAAmB,QAApC;;;AAGA,IAAI,iBAAiB,YAAY,cAAjC;;;AAGA,IAAI,aAAa,OAAO,MACtB,WAAW,IAAX,CAAgB,cAAhB,EAAgC,OAAhC,CAAwC,qBAAxC,EAA+D,MAA/D,EACC,OADD,CACS,wDADT,EACmE,OADnE,CADsB,GAEwD,GAF/D,CAAjB;;;;;;;;;;;;;;;;;;AAqBA,SAAS,QAAT,CAAkB,KAAlB,EAAyB;AACvB,MAAI,SAAS,IAAb,EAAmB;AACjB,WAAO,KAAP;AACD;AACD,MAAI,WAAW,KAAX,CAAJ,EAAuB;AACrB,WAAO,WAAW,IAAX,CAAgB,WAAW,IAAX,CAAgB,KAAhB,CAAhB,CAAP;AACD;AACD,SAAO,aAAa,KAAb,KAAuB,CAAC,aAAa,KAAb,IAAsB,UAAtB,GAAmC,YAApC,EAAkD,IAAlD,CAAuD,KAAvD,CAA9B;AACD;;AAED,OAAO,OAAP,GAAiB,QAAjB","file":"isNative-compiled.js","sourcesContent":["var isFunction = require('./isFunction'),\n    isHostObject = require('../internal/isHostObject'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n}\n\nmodule.exports = isNative;\n"]}