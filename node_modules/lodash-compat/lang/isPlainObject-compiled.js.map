{"version":3,"sources":["isPlainObject.js"],"names":[],"mappings":"AAAA,IAAI,YAAY,QAAQ,uBAAR,CAAhB;IACI,cAAc,QAAQ,eAAR,CADlB;IAEI,eAAe,QAAQ,0BAAR,CAFnB;IAGI,eAAe,QAAQ,0BAAR,CAHnB;IAII,UAAU,QAAQ,YAAR,CAJd;;;AAOA,IAAI,YAAY,iBAAhB;;;AAGA,IAAI,cAAc,OAAO,SAAzB;;;AAGA,IAAI,iBAAiB,YAAY,cAAjC;;;;;;AAMA,IAAI,cAAc,YAAY,QAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,SAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5B,MAAI,IAAJ;;;AAGA,MAAI,EAAE,aAAa,KAAb,KAAuB,YAAY,IAAZ,CAAiB,KAAjB,KAA2B,SAAlD,IAA+D,CAAC,aAAa,KAAb,CAAhE,IAAuF,CAAC,YAAY,KAAZ,CAA1F,KACC,CAAC,eAAe,IAAf,CAAoB,KAApB,EAA2B,aAA3B,CAAD,KAA+C,OAAO,MAAM,WAAb,EAA0B,OAAO,IAAP,IAAe,UAAf,IAA6B,EAAE,gBAAgB,IAAlB,CAAtG,CADL,EACsI;AACpI,WAAO,KAAP;AACD;;;;AAID,MAAI,MAAJ;AACA,MAAI,QAAQ,OAAZ,EAAqB;AACnB,cAAU,KAAV,EAAiB,UAAS,QAAT,EAAmB,GAAnB,EAAwB,MAAxB,EAAgC;AAC/C,eAAS,eAAe,IAAf,CAAoB,MAApB,EAA4B,GAA5B,CAAT;AACA,aAAO,KAAP;AACD,KAHD;AAIA,WAAO,WAAW,KAAlB;AACD;;;;AAID,YAAU,KAAV,EAAiB,UAAS,QAAT,EAAmB,GAAnB,EAAwB;AACvC,aAAS,GAAT;AACD,GAFD;AAGA,SAAO,WAAW,SAAX,IAAwB,eAAe,IAAf,CAAoB,KAApB,EAA2B,MAA3B,CAA/B;AACD;;AAED,OAAO,OAAP,GAAiB,aAAjB","file":"isPlainObject-compiled.js","sourcesContent":["var baseForIn = require('../internal/baseForIn'),\n    isArguments = require('./isArguments'),\n    isHostObject = require('../internal/isHostObject'),\n    isObjectLike = require('../internal/isObjectLike'),\n    support = require('../support');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * **Note:** This method assumes objects created by the `Object` constructor\n * have no inherited enumerable properties.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  var Ctor;\n\n  // Exit early for non `Object` objects.\n  if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isHostObject(value) && !isArguments(value)) ||\n      (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n    return false;\n  }\n  // IE < 9 iterates inherited properties before own properties. If the first\n  // iterated property is an object's own property then there are no inherited\n  // enumerable properties.\n  var result;\n  if (support.ownLast) {\n    baseForIn(value, function(subValue, key, object) {\n      result = hasOwnProperty.call(object, key);\n      return false;\n    });\n    return result !== false;\n  }\n  // In most environments an object's own properties are iterated before\n  // its inherited properties. If the last iterated property is an object's\n  // own property then there are no inherited enumerable properties.\n  baseForIn(value, function(subValue, key) {\n    result = key;\n  });\n  return result === undefined || hasOwnProperty.call(value, result);\n}\n\nmodule.exports = isPlainObject;\n"]}